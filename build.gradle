plugins {
    id "java"
    id "checkstyle"
    id "io.spring.dependency-management" version "1.1.7"
    id "io.spring.javaformat" version "$javaformatVersion"
    id "org.asciidoctor.jvm.convert" version "4.0.2"
    id "org.springframework.boot" version "3.5.7"
}

group = "io.spring.project-api"
version = "1.0.0-SNAPSHOT"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
	snippetsDir = file("build/generated-snippets")
}

repositories {
	mavenCentral()
}

checkstyle {
	toolVersion = "10.12.4"
}

dependencies {
    checkstyle("io.spring.javaformat:spring-javaformat-checkstyle:${javaformatVersion}")

	implementation("org.springframework.boot:spring-boot-starter-cache")
	implementation("org.springframework.boot:spring-boot-starter-hateoas")
	implementation("org.springframework.boot:spring-boot-starter-oauth2-resource-server")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-validation")
	implementation("org.springframework.retry:spring-retry:2.0.12")

	implementation("com.azure.spring:spring-cloud-azure-starter-keyvault-secrets")
	implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
	implementation("com.vladsch.flexmark:flexmark-all:0.64.8")
	implementation("jakarta.xml.bind:jakarta.xml.bind-api:4.0.2")
	implementation("org.apache.maven:maven-artifact:3.9.11")

	testImplementation("com.squareup.okhttp3:mockwebserver:4.12.0")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.springframework.security:spring-security-test")
	testImplementation("org.springframework.restdocs:spring-restdocs-mockmvc")
}

dependencyManagement {
	imports {
		mavenBom "com.azure.spring:spring-cloud-azure-dependencies:4.5.0"
	}
}

tasks.named("test") {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

asciidoctor {
	attributes "snippets": snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	from("${asciidoctor.outputDir}/index.html") {
		into "static/restdocs"
	}
}
