name: Deploy
on:
  workflow_dispatch:
    inputs: { }
  push:
    branches:
      - main
env:
  SPRING_APPS_SERVICE: ${{ secrets.SPRING_APPS_SERVICE }}
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  KEY_VAULT: ${{ secrets.KEY_VAULT }}
  PROJECT_API_APP: projects-api

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Set Up Gradle
        uses: gradle/actions/setup-gradle@4d9f0ba0025fe599b4ebab900eb7f3a1d93ef4c2 # v5.0.0
      - name: Build
        shell: bash
        run: ./gradlew build
      - name: Set up Azure
        uses:  azure/login@cb79c773a3cfa27f31f25eb3f677781210c9ce3d
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_SPRING_ASA }}
      - name: Set up Azure Spring Extension
        run: az extension add --name spring
      - name: Create app
        run: |
          az spring app create \
          --name ${PROJECT_API_APP} \
          --resource-group "$RESOURCE_GROUP" \
          --instance-count 2 \
          --assign-endpoint true \
          --service "$SPRING_APPS_SERVICE"
        continue-on-error: true  
      - name: Deploy
        run: |
          keyvault_uri=$(az keyvault show \
           --resource-group ${RESOURCE_GROUP} \
           --name ${KEY_VAULT} | jq -r '.properties.vaultUri')
          az spring app deploy \
            --name ${PROJECT_API_APP} \
            --resource-group "$RESOURCE_GROUP" \
            --runtime-version Java_17 \
            --service "$SPRING_APPS_SERVICE" \
            --env "SPRING_CLOUD_AZURE_KEYVAULT_SECRET_PROPERTY_SOURCES_0_ENDPOINT=${keyvault_uri}" "SPRING_CLOUD_AZURE_KEYVAULT_SECRET_PROPERTY_SOURCES_0_NAME=${KEY_VAULT}" "SPRING_PROFILES_ACTIVE=key-vault" \
            --source-path ./
